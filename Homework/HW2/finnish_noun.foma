# Определяем класс финского алфавита 
define Consonant b | c | d | f | g | h | j | k | l | m | n | p | q | r | s | t | v | w | x | z ;
define FrontVowel ä | ö | y ;
define NeutralVowel e | i ;
define BackVowel a | o | u ;
define Vowel FrontVowel | NeutralVowel | BackVowel | A | E;
define Letter Vowel | Consonant;

# Определяем класс падежей, множественного и единственного числа
define Case "+Nom" | "+Gen" | "+Part" | "+In" | "+All" ;
define Number "+Sg" | "+Pl" ; 

# Определяем классы задних и передних основ 
define FrontStem [Consonant* [ FrontVowel | NeutralVowel ] ]+ Consonant*;
define BackStem [Consonant* [ BackVowel | NeutralVowel ] ]* [Consonant* BackVowel] [Consonant* [ BackVowel | NeutralVowel ] ]* Consonant*;
define Stem Letter+;

define Input Stem Number Case;

# Определяем класс номинатива ед. и мн. ч, которое образуем путем присоединения нуля или "t"
define NomPl "+Pl" "+Nom" -> "^" t || _ ;
define NomSg "+Sg" "+Nom" -> "^" || _ ;
define Nominatives NomPl .o. NomSg ;

# Определяем окончания генетива 
define GenDen "+Gen" -> d e n || Vowel Vowel "+Pl" _ ;
define Gen "+Gen" -> E n || _ ;
define Genetive GenDen .o. Gen ;

# Определяем окончание остальных падежей (два случая для партитива, инессива и аллатива)
define PartTa "+Part" -> t A || [ Consonant Vowel Vowel | Consonant ] Number _ ;
define PartA "+Part" -> A || _ ;

define LocativeCases "+In" -> s s A , "+All" -> l l A || _ ;

define OtherCases PartTa .o. PartA .o. LocativeCases ;

# Определяем правила чередования основ - гласные
define Sg "+Sg" -> "^" || _ ;
define OmitA ä -> 0, i -> 0 || _ "+Pl";
define Ai2Oi a -> o || [ a | e | i ] Vowel* Consonant+ _ "+Pl";
define Ai2i a -> 0 || [ o | u ] Vowel* Consonant+ _ "+Pl";
define OmitFirst Vowel -> 0 || _ Vowel "+Pl" Consonant;
define Pl "+Pl" -> "^" i || _ ;

define NumberInfl Sg .o. OmitA .o. Ai2i .o. Ai2Oi .o. OmitFirst .o. Pl ;

# корень с лабиальными гласными не изменяется, а во множественном числе i меняется j между гласными 
# применения правил на употребление 
define JotPl i -> j || Vowel "^"* _ "^"* Vowel ;
define HarmonyBack A -> a || BackStem "^" Letter* _;
define HarmonyFront A -> ä || FrontStem "^" Letter* _;

define Phonetics JotPl .o. HarmonyBack .o. HarmonyFront ;

# Опрделяем правила чередование согласных в основе
define DoublePTK p p -> p , t t -> t , k k -> k || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleP p -> v || Vowel _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleTK t -> d , k -> 0 || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ; 
define TwoLetter m p -> m m , n t -> n n , n k -> n g , l t -> l l , r t -> r r || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define ThreeLetter l k e -> l j e , r k e -> r j e , h k e -> h j e , u k u -> u v u || Letter _ "^"* Consonant [ .#. | Consonant ] ;
define N2M i n -> i m , t ö n -> t t ö m || _ "^" Vowel;
define EOmit E -> 0 || Vowel "^" _;
define EReal E -> e || _;

define Alternations N2M  .o. EOmit .o. EReal .o. ThreeLetter .o. TwoLetter .o. SingleP .o. SingleTK .o. DoublePTK ;

# Объединяем все существующие аффиксы
define Affixes Nominatives .o. Genetive .o. OtherCases .o. NumberInfl .o. Alternations .o. Phonetics;

# Удаляем символ границы морфем
define Cleanup "^" -> 0 || _ ;

# Складываем все правила в одну грамматику 
define Grammar Input .o. Affixes .o. Cleanup ;
push Grammar
